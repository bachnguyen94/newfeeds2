<?php
namespace Admin\Controller;

use Admin\Controller\AppController;

/**
 * Technologies Controller
 *
 * @property \Admin\Model\Table\TechnologiesTable $Technologies
 */
class TechnologiesController extends AppController
{
    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->loadModel('Technologies');
    }

    /**
     * Index method
     *
     * @return \Cake\Network\Response|null
     */
    public function index()
    {
        $technologies = $this->paginate($this->Technologies);
        $this->set(compact('technologies'));
        $this->set('_serialize', ['technologies']);
    }

    /**
     * View method
     *
     * @param string|null $id Busines id.
     * @return \Cake\Network\Response|null
     * @throws \Cake\Datasource\Exception\RecordNotFoundException When record not found.
     */
    public function view($id = null)
    {
        $technology = $this->Technologies->get($id, [
            'contain' => []
        ]);

        $this->set('technology', $technology);
        $this->set('_serialize', ['technology']);
    }

    /**
     * Add method
     *
     * @return \Cake\Network\Response|void Redirects on successful add, renders view otherwise.
     */
    public function form($id = null)
    {
        $technology = $this->Technologies->newEntity();
        if($id){
            $technology = $this->Technologies->get($id);
        }

        if ($this->request->data) {
            $technology = $this->Core->patchEntity($technology, $this->request->data);
            if ($this->Technologies->save($technology)) {
                $this->Flash->success(__('The technology has been saved.'));

                return $this->redirect(['action' => 'index']);
            } else {
                $this->Flash->error(__('The Technologies could not be saved. Please, try again.'));
            }
        }
        $this->set(compact('technology'));
        $this->set('_serialize', ['technology']);
    }

    /**
     * Edit method
     *
     * @param string|null $id Busines id.
     * @return \Cake\Network\Response|void Redirects on successful edit, renders view otherwise.
     * @throws \Cake\Network\Exception\NotFoundException When record not found.
     */

    /**
     * Delete method
     *
     * @param string|null $id Busines id.
     * @return \Cake\Network\Response|null Redirects to index.
     * @throws \Cake\Datasource\Exception\RecordNotFoundException When record not found.
     */
    public function delete($id = null)
    {
        $this->request->allowMethod(['post', 'delete']);
        $technology = $this->Technologies->get($id);
//        debug($business);die;
        if ($this->Technologies->delete($technology)) {
            $this->Flash->success(__('The Technologies has been deleted.'));
        } else {
            $this->Flash->error(__('The Technologies could not be deleted. Please, try again.'));
        }

        return $this->redirect(['action' => 'index']);
    }
}

